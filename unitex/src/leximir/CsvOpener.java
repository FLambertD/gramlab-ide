/*
 * Unitex
 *
 * Copyright (C) 2001-2018 Université Paris-Est Marne-la-Vallée <unitex@univ-mlv.fr>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 *
 */
package leximir;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Vector;
import java.util.Arrays;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 * @author Anas Ait cheikh
 */
public class CsvOpener extends javax.swing.JInternalFrame {

    private String csvfile;

    public CsvOpener(String csvfile) {
        super("Statistic on table", true, true, true, true);
        this.csvfile = csvfile;
        initComponents();

    }

    private Vector<String> header() {
        try {
        	try (BufferedReader sourceFile = new BufferedReader(new FileReader(csvfile))) {
	            String s;
	            if ((s = sourceFile.readLine()) != null) {
	                return new Vector<String>(Arrays.asList(s.split(";")));
	            }
        	}
        } catch (FileNotFoundException e) {
            System.err.println("No file "+csvfile+" was found.");
        } catch (IOException e) {
        	e.printStackTrace();
        }
        return null;
    }

    private Vector<Vector> read() {
        Vector<Vector> tmp = new Vector<Vector>();
        try {
            try (BufferedReader sourceFile = new BufferedReader(new FileReader(csvfile))){
	            String s;
	            for (int i = 1; (s = sourceFile.readLine()) != null ;i++) {
	                if (i > 1) {
	                    tmp.add(new Vector<String>(Arrays.asList(s.split(";"))));
	                }
	            }
            }
        } catch (FileNotFoundException e) {
            System.err.println("No file "+csvfile+" was found.");
        } catch (IOException e) {
        	e.printStackTrace();
        }
        return tmp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Vector<String> header = this.header();
        Vector<Vector> data = this.read();
        JTable table = new JTable(data, header);
        table.setRowHeight(20);
        JScrollPane scrollpane=new JScrollPane(table,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
           JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        this.getContentPane().add(scrollpane);
        int h=(data.size()>20)? 20:data.size();
        this.setSize(header.size()*124,56+h*20);
	
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
